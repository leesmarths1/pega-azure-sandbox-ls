

#Push
docker tag pega-azure-sandbox-ls:latest leessandboxakscr.azurecr.io/pega-azure-sandbox-ls:latest
docker push leessandboxakscr.azurecr.io/pega-azure-sandbox-ls:latest
#Deploy
kubectl apply -f D:\Github\pega-azure-sandbox-ls\DeployTomCat.yaml

az aks get-credentials --resource-group lees-sandboxenv-uks-rg --name lees-sandbox-pega74-uks-aks --overwrite-existing



Server=tcp:ls-snadbox-pega74-uks-sqlsvr.database.windows.net,1433;Initial Catalog=pega-wmkt;Persist Security Info=False;User ID={your_username};Password={your_password};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;
kubectl create -f D:\Github\pega-azure-sandbox-ls\LogReaderRBAC.yaml

az aks browse --resource-group lees-sandboxenv-uks-rg --name lees-sandbox-pega74-uks-aks

#Push
docker tag pega-azure-sandbox-ls:latest hspegacr.azurecr.io/pega-azure-sandbox-ls:latest
docker push hspegacr.azurecr.io/pega-azure-sandbox-ls:latest
#Deploy
kubectl apply -f D:\Github\pega-azure-sandbox-ls\DeployTomCat.yaml

#Local Authentication to azure
az aks get-credentials --resource-group ls-sandboxenv-uks-rg --name ls-sandbox-pega74-uks-aks --overwrite-existing

kubectl create -f D:\Github\pega-azure-sandbox-ls\LogReaderRBAC.yaml

#remove kube config when Aks wont authenticate
rm ~/.kube/config

az container logs --resource-group ls-sandboxenv-uks-rg --name a77e353d-4fc7-11e9-9c8c-9e86d3971e7c/tomcat-pega

AKS_RESOURCE_GROUP=ls-sandboxenv-uks-rg
AKS_CLUSTER_NAME=ls-sandbox-pega74-uks-aks
ACR_RESOURCE_GROUP=ls-sandboxenv-uks-rg
ACR_NAME=hspegacr

# Get the id of the service principal configured for AKS
CLIENT_ID=$(az aks show --resource-group $AKS_RESOURCE_GROUP --name $AKS_CLUSTER_NAME --query "servicePrincipalProfile.clientId" --output tsv)

# Get the ACR registry resource id
ACR_ID=$(az acr show --name $ACR_NAME --resource-group $ACR_RESOURCE_GROUP --query "id" --output tsv)

# Create role assignment
az role assignment create --assignee $CLIENT_ID --role acrpull --scope $ACR_ID

kubectl create clusterrolebinding kubernetes-dashboard --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard